#------------------------------------------------------------------------------
#-  CRUSH
#-  Cognitive Radio Universal Software Hardware
#-  http://www.coe.neu.edu/Research/rcl//projects/CRUSH.php
#-  
#-  CRUSH is free software: you can redistribute it and/or modify
#-  it under the terms of the GNU General Public License as published by
#-  the Free Software Foundation, either version 3 of the License, or
#-  (at your option) any later version.
#-  
#-  CRUSH is distributed in the hope that it will be useful,
#-  but WITHOUT ANY WARRANTY; without even the implied warranty of
#-  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#-  GNU General Public License for more details.
#-  
#-  You should have received a copy of the GNU General Public License
#-  along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
#-  
#-  
#-  File: top_crush.ucf
#-  Author: Jonathon Pendlum (jon.pendlum@gmail.com)
#-  Description: UCF constraints for Xilinx ML605 Development Board
#-  xc6vlx240t-ff1156-1
#------------------------------------------------------------------------------

NET "BUTTON_CPU_RESET" LOC = "H10" | IOSTANDARD = SSTL15 | PULLUP;
#66 MHz clock
NET "CLK_OSC_66MHZ" LOC = "U23" | IOSTANDARD = LVCMOS25;
NET "CLK_OSC_200MHZ_N" LOC = "H9" | IOSTANDARD = LVDS_25;
NET "CLK_OSC_200MHZ_P" LOC = "J9" | IOSTANDARD = LVDS_25;

NET "UART_DEBUG_RX" LOC = "J24" | IOSTANDARD = LVCMOS25;
NET "UART_DEBUG_TX" LOC = "J25" | IOSTANDARD = LVCMOS25;

NET "GPIO_LED<0>" LOC = "AC22" | IOSTANDARD = LVCMOS25;
NET "GPIO_LED<1>" LOC = "AC24" | IOSTANDARD = LVCMOS25;
NET "GPIO_LED<2>" LOC = "AE22" | IOSTANDARD = LVCMOS25;
NET "GPIO_LED<3>" LOC = "AE23" | IOSTANDARD = LVCMOS25;
NET "GPIO_LED<4>" LOC = "AB23" | IOSTANDARD = LVCMOS25;
NET "GPIO_LED<5>" LOC = "AG23" | IOSTANDARD = LVCMOS25;
NET "GPIO_LED<6>" LOC = "AE24" | IOSTANDARD = LVCMOS25;
NET "GPIO_LED<7>" LOC = "AD24" | IOSTANDARD = LVCMOS25;

NET "GPIO_DIP_SW<0>" LOC = "D22" | IOSTANDARD = LVCMOS15;
NET "GPIO_DIP_SW<1>" LOC = "C22" | IOSTANDARD = LVCMOS15;
NET "GPIO_DIP_SW<2>" LOC = "L21" | IOSTANDARD = LVCMOS15;
NET "GPIO_DIP_SW<3>" LOC = "L20" | IOSTANDARD = LVCMOS15;
NET "GPIO_DIP_SW<4>" LOC = "C18" | IOSTANDARD = LVCMOS15;
NET "GPIO_DIP_SW<5>" LOC = "B18" | IOSTANDARD = LVCMOS15;
NET "GPIO_DIP_SW<6>" LOC = "K22" | IOSTANDARD = LVCMOS15;
NET "GPIO_DIP_SW<7>" LOC = "K21" | IOSTANDARD = LVCMOS15;

NET "BUTTON_N" LOC = "A19" | IOSTANDARD = LVCMOS15;
NET "BUTTON_S" LOC = "A18" | IOSTANDARD = LVCMOS15;
NET "BUTTON_E" LOC = "G17" | IOSTANDARD = LVCMOS15;
NET "BUTTON_W" LOC = "H17" | IOSTANDARD = LVCMOS15;
NET "BUTTON_C" LOC = "G26" | IOSTANDARD = LVCMOS15;

NET "LED_N" LOC = "AH27" | IOSTANDARD = LVCMOS15;
NET "LED_S" LOC = "AH28" | IOSTANDARD = LVCMOS15;
NET "LED_E" LOC = "AE21" | IOSTANDARD = LVCMOS15;
NET "LED_W" LOC = "AD21" | IOSTANDARD = LVCMOS15;
NET "LED_C" LOC = "AP24" | IOSTANDARD = LVCMOS15;

# -----------------------------------------------------------------------------
# USRP Debug Port to ML605
# -----------------------------------------------------------------------------

# All I/O in Bank 13
NET "RX_DATA_CLK_N" LOC = "AC29" | IOSTANDARD = LVDS_25; # SRCC
NET "RX_DATA_CLK_P" LOC = "AD29" | IOSTANDARD = LVDS_25; # SRCC
NET "RX_DATA_N[0]"  LOC = "AC25" | IOSTANDARD = LVDS_25;
NET "RX_DATA_P[0]"  LOC = "AB25" | IOSTANDARD = LVDS_25;
NET "RX_DATA_N[1]"  LOC = "Y26"  | IOSTANDARD = LVDS_25;
NET "RX_DATA_P[1]"  LOC = "AA25" | IOSTANDARD = LVDS_25;
NET "RX_DATA_N[2]"  LOC = "AC28" | IOSTANDARD = LVDS_25;
NET "RX_DATA_P[2]"  LOC = "AB28" | IOSTANDARD = LVDS_25;
NET "RX_DATA_N[3]"  LOC = "AC27" | IOSTANDARD = LVDS_25;
NET "RX_DATA_P[3]"  LOC = "AB27" | IOSTANDARD = LVDS_25;
NET "RX_DATA_N[4]"  LOC = "AA29" | IOSTANDARD = LVDS_25;
NET "RX_DATA_P[4]"  LOC = "AA28" | IOSTANDARD = LVDS_25;
NET "RX_DATA_N[5]"  LOC = "AB26" | IOSTANDARD = LVDS_25;
NET "RX_DATA_P[5]"  LOC = "AA26" | IOSTANDARD = LVDS_25;
NET "RX_DATA_N[6]"  LOC = "AF31" | IOSTANDARD = LVDS_25;
NET "RX_DATA_P[6]"  LOC = "AG31" | IOSTANDARD = LVDS_25;
NET "TX_DATA_N[0]"  LOC = "AF33" | IOSTANDARD = LVDS_25; # Routed wrong polarity on Custom PCB (N->P)
NET "TX_DATA_P[0]"  LOC = "AE33" | IOSTANDARD = LVDS_25; # Routed wrong polarity on Custom PCB (P->N)
NET "TX_DATA_N[1]"  LOC = "AB31" | IOSTANDARD = LVDS_25;
NET "TX_DATA_P[1]"  LOC = "AB30" | IOSTANDARD = LVDS_25;
NET "TX_DATA_N[2]"  LOC = "AG32" | IOSTANDARD = LVDS_25;
NET "TX_DATA_P[2]"  LOC = "AG33" | IOSTANDARD = LVDS_25;
NET "TX_DATA_N[3]"  LOC = "AE32" | IOSTANDARD = LVDS_25;
NET "TX_DATA_P[3]"  LOC = "AD32" | IOSTANDARD = LVDS_25;
NET "TX_DATA_N[4]"  LOC = "AD31" | IOSTANDARD = LVDS_25;
NET "TX_DATA_P[4]"  LOC = "AE31" | IOSTANDARD = LVDS_25;
NET "TX_DATA_N[5]"  LOC = "AA31" | IOSTANDARD = LVDS_25;
NET "TX_DATA_P[5]"  LOC = "AA30" | IOSTANDARD = LVDS_25;
NET "TX_DATA_N[6]"  LOC = "AC32" | IOSTANDARD = LVDS_25;
NET "TX_DATA_P[6]"  LOC = "AB32" | IOSTANDARD = LVDS_25;
NET "TX_DATA_N[7]"  LOC = "AB33" | IOSTANDARD = LVDS_25;
NET "TX_DATA_P[7]"  LOC = "AC33" | IOSTANDARD = LVDS_25;
NET "UART_TX"       LOC = "AC34" | IOSTANDARD = LVCMOS25; # Not a differential pair on USRP
NET "SPARE"         LOC = "AD34" | IOSTANDARD = LVCMOS25; # Not a differential pair on USRP

# -----------------------------------------------------------------------------
# Gigabit Ethernet
# -----------------------------------------------------------------------------
#BASE-T PHY Receiver Constraints (GMII / MII)
NET "GMII_TXD<0>" LOC = "AM11"; ## 18 on U80
NET "GMII_TXD<1>" LOC = "AL11"; ## 19 on U80
NET "GMII_TXD<2>" LOC = "AG10"; ## 20 on U80
NET "GMII_TXD<3>" LOC = "AG11"; ## 24 on U80
NET "GMII_TXD<4>" LOC = "AL10"; ## 25 on U80
NET "GMII_TXD<5>" LOC = "AM10"; ## 26 on U80
NET "GMII_TXD<6>" LOC = "AE11"; ## 28 on U80
NET "GMII_TXD<7>" LOC = "AF11"; ## 29 on U80
NET "GMII_TX_EN" LOC = "AJ10"; ## 16 on U80
NET "GMII_TX_ER" LOC = "AH10"; ## 13 on U80
NET "GMII_TX_CLK" LOC = "AH12"; ## 10 on U80

#BASE-T PHY Transmitter Constraints (GMII / MII)
NET "GMII_RXD<0>" LOC = "AN13"; ## 3 on U80
NET "GMII_RXD<1>" LOC = "AF14"; ## 128 on U80
NET "GMII_RXD<2>" LOC = "AE14"; ## 126 on U80
NET "GMII_RXD<3>" LOC = "AN12"; ## 125 on U80
NET "GMII_RXD<4>" LOC = "AM12"; ## 124 on U80
NET "GMII_RXD<5>" LOC = "AD11"; ## 123 on U80
NET "GMII_RXD<6>" LOC = "AC12"; ## 121 on U80
NET "GMII_RXD<7>" LOC = "AC13"; ## 120 on U80
NET "GMII_RX_DV" LOC = "AM13"; ## 4 on U80
NET "GMII_RX_ER" LOC = "AG12"; ## 9 on U80
NET "GMII_RX_CLK" LOC = "AP11"; ## 7 on U80
NET "GMII_COL" LOC = "AK13"; ## 114 on U80
NET "GMII_CRS" LOC = "AL13"; ## 115 on U80
NET "MII_TX_CLK" LOC = "AD12";

#BASE-X PHY Constraints
NET "PHY_RESET_n" LOC = "AH13"; ## 36 on U80

CONFIG PART = xc6vlx240tff1156-1;

# Locate the Tri-Mode Ethernet MAC instance
INST "*v6_emac" LOC = "TEMAC_X0Y0";

# Clock Constraints
# -----------------------------------------------------------------------------
# Ethernet GTX_CLK high quality 125 MHz reference clock
NET "clk_125MHz" TNM_NET = "ref_gtx_clk";
TIMEGRP "temac_clk_ref_gtx" = "ref_gtx_clk";
TIMESPEC "TS_temac_clk_ref_gtx" = PERIOD "temac_clk_ref_gtx" 8 ns HIGH 50 %;

# Multiplexed 1 Gbps, 10/100 Mbps output inherits constraint from GTX_CLK
NET "GMII_TX_CLK" TNM_NET = "ref_mux_clk";
TIMEGRP "temac_clk_ref_mux" = "ref_mux_clk";
TIMESPEC "TS_temac_clk_ref_mux" = PERIOD "temac_clk_ref_mux" TS_temac_clk_ref_gtx HIGH 50%;

# Ethernet GMII PHY-side receive clock
NET "GMII_RX_CLK" TNM_NET = "phy_clk_rx";
TIMEGRP "temac_clk_phy_rx" = "phy_clk_rx";
TIMESPEC "TS_temac_clk_phy_rx" = PERIOD "temac_clk_phy_rx" 7.5 ns HIGH 50 %;

# IDELAYCTRL 200 MHz reference clock
NET "clk_200MHz" TNM_NET  = "clk_ref_clk";
TIMEGRP "ref_clk" = "clk_ref_clk";
TIMESPEC "TS_ref_clk" = PERIOD "ref_clk" 5 ns HIGH 50 %;

# define TIGs between unrelated clock domains
TIMESPEC "TS_clock_path_gtx2ref" = FROM "clock_generator_clkout0" TO "clock_generator_clkout2" TIG;
PIN "*bufgmux_speed_clk.I1" TIG;
PIN "*bufgmux_speed_clk.CE0" TIG;

# define TIGs on reset synchronizer FDPE PRE inputs
PIN "*reset_sync1.PRE" TIG;
PIN "*reset_sync2.PRE" TIG;

# GMII physical interface constraints
# -----------------------------------------------------------------------------
INST "*inst_embedded_emac_block*gmii_interface*delay_gmii_rx_dv" IDELAY_VALUE = 23;
INST "*inst_embedded_emac_block*gmii_interface*delay_gmii_rx_er" IDELAY_VALUE = 23;
INST "*inst_embedded_emac_block*gmii_interface*delay_gmii_rxd"   IDELAY_VALUE = 23;

# Group all IDELAY-related blocks to use a single IDELAYCTRL
INST "*dlyctrl"                                      IODELAY_GROUP = gmii_idelay;
INST "*inst_embedded_emac_block*gmii_interface*delay_gmii_rx_dv" IODELAY_GROUP = gmii_idelay;
INST "*inst_embedded_emac_block*gmii_interface*delay_gmii_rx_er" IODELAY_GROUP = gmii_idelay;
INST "*inst_embedded_emac_block*gmii_interface*delay_gmii_rxd"   IODELAY_GROUP = gmii_idelay;

# The following constraints work in conjunction with IDELAY_VALUE settings to
# check that the GMII receive bus remains in alignment with the rising edge of
# GMII_RX_CLK, to within 2 ns setup time and 0 ns hold time.
INST "gmii_rxd<?>" TNM = "gmii_rx";
INST "gmii_rx_dv"  TNM = "gmii_rx";
INST "gmii_rx_er"  TNM = "gmii_rx";
TIMEGRP "gmii_rx" OFFSET = IN 2 ns VALID 2 ns BEFORE "gmii_rx_clk" RISING;

# Constrain the GMII physical interface flip-flops to IOBs
INST "*inst_embedded_emac_block*gmii_interface*rxd_to_mac*"  IOB = true;
INST "*inst_embedded_emac_block*gmii_interface*rx_dv_to_mac" IOB = true;
INST "*inst_embedded_emac_block*gmii_interface*rx_er_to_mac" IOB = true;
INST "*inst_embedded_emac_block*gmii_interface*gmii_txd_?"   IOB = true;
INST "*inst_embedded_emac_block*gmii_interface*gmii_tx_en"   IOB = true;
INST "*inst_embedded_emac_block*gmii_interface*gmii_tx_er"   IOB = true;

# Locate the GMII physical interface pins
# Locate the 125 MHz reference clock buffer
INST "*BUFGMUX_SPEED_CLK" LOC = "BUFGCTRL_X0Y6";